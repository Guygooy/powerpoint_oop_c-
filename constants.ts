import type { LessonTopic } from './types';

export const LESSON_PLAN: LessonTopic[] = [
  { topic: 'שקופית פתיחה: מבוא לתכנות מונחה עצמים ומחלקות', type: 'title' },
  { topic: 'נושאי הלימוד במצגת', type: 'toc' },
  { topic: 'חזרה: מהי תכנות פרוצדורלי?', type: 'concept' },
  { topic: 'הבעיה עם תכנות פרוצדורלי', type: 'concept' },
  { topic: 'מבוא לתכנות מונחה עצמים (OOP)', type: 'concept' },
  { topic: 'ארבעת עמודי התווך של OOP (באופן כללי)', type: 'concept' },
  { topic: 'מהי מחלקה (Class)?', type: 'concept' },
  { topic: 'מהו אובייקט (Object)?', type: 'concept' },
  { topic: 'תחביר C#: הגדרת מחלקה פשוטה', type: 'concept' },
  { topic: 'תכונות (Fields/Properties)', type: 'concept' },
  { topic: 'תרגיל 1: הגדרת מחלקת Student', type: 'exercise' },
  { topic: 'פעולות (Methods)', type: 'concept' },
  { topic: 'תחביר C#: הוספת פעולות למחלקה', type: 'concept' },
  { topic: 'תרגיל 2: הוספת פעולה למחלקת Student', type: 'exercise' },
  { topic: 'יצירת אובייקט (Instantiation) והמילה השמורה new', type: 'concept' },
  { topic: 'גישה לתכונות ופעולות עם אופרטור הנקודה', type: 'concept' },
  { topic: 'תרגיל 3: יצירת אובייקטים מסוג Student', type: 'exercise' },
  { topic: 'פעולות בונות (Constructors)', type: 'concept' },
  { topic: 'תחביר C#: כתיבת פעולה בונה', type: 'concept' },
  { topic: 'תרגיל 4: הוספת פעולה בונה למחלקת Student', type: 'exercise' },
  { topic: 'כימוס (Encapsulation)', type: 'concept' },
  { topic: 'מאפיינים (Properties) ב-C# - Getters & Setters', type: 'concept' },
  { topic: 'תחביר C#: שימוש במאפיינים', type: 'concept' },
  { topic: 'תרגיל 5: שיפור מחלקת Student עם מאפיינים', type: 'exercise' },
  { topic: 'המילה השמורה this', type: 'concept' },
  { topic: 'חברים סטטיים (Static) מול חברי מופע (Instance)', type: 'concept' },
  { topic: 'תחביר C#: הגדרת שדה ופעולה סטטיים', type: 'concept' },
  { topic: 'תרגיל 6: הוספת מונה סטטי למחלקת Student', type: 'exercise' },
  { topic: 'מבוא לירושה (Inheritance)', type: 'concept' },
  { topic: 'מחלקת בסיס ומחלקה נגזרת (Base and Derived)', type: 'concept' },
  { topic: 'תחביר C#: ירושה והמילה השמורה base', type: 'concept' },
  { topic: 'תרגיל 7: יצירת מחלקות יורשות', type: 'exercise' },
  { topic: 'פולימורפיזם: דריסת פעולות (Method Overriding)', type: 'concept' },
  { topic: 'המילים השמורות virtual ו-override', type: 'concept' },
  { topic: 'תרגיל 8: דריסת פעולה במחלקה נגזרת', type: 'exercise' },
  { topic: 'המרה (Casting): המרה כלפי מעלה (Upcasting)', type: 'concept' },
  { topic: 'המרה (Casting): המרה כלפי מטה (Downcasting)', type: 'concept' },
  { topic: 'תרגיל 9: תרגול המרות בין אובייקטים', type: 'exercise' },
  { topic: 'ממשקים (Interfaces)', type: 'concept' },
  { topic: 'הגדרה ומימוש ממשק ב-C#', type: 'concept' },
  { topic: 'תרגיל 10: מימוש ממשק פשוט', type: 'exercise' },
  { topic: 'תרגיל מסכם 1: מחלקת חשבון בנק (BankAccount)', type: 'exercise' },
  { topic: 'תרגיל מסכם 2: מחלקת מלבן (Rectangle)', type: 'exercise' },
  { topic: 'תרגיל מסכם 3: מחלקת מכונית (Car) עם מונה סטטי', type: 'exercise' },
  { topic: 'תרגיל מסכם 4: מחלקת ספר (Book)', type: 'exercise' },
  { topic: 'תרגיל מסכם 5: מחלקת מוצר (Product) לחנות מקוונת', type: 'exercise' },
  { topic: 'סיכום וחזרה על מושגים', type: 'summary' },
  { topic: 'הנחיות לפרויקט מסכם: מערכת לניהול ספרייה', type: 'summary' },
  { topic: 'שאלות ותשובות', type: 'qa' },
];